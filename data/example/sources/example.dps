# Full regular python is fully allowed and the default
import functools

@functools.lru_cache
def fibonacci(n):
    return n if n < 2 else fibonacci(n - 1) + fibonacci(n - 2)
# Lines starting with slashes get interpreted as commands, in order to add those commands to files
# They must be part of a function statement like the following:
# function statements are any commands that end with "function", and optional names and tags
# Not including a namespace for the function name will default it to the same namespace as the dps file
# function tags without namespaces default to the "minecraft" namespace
/function tick [tick]:
    /execute as @a at @s run function:
        /title @s actionbar "Hey"
        /fill ~10 ~10 ~10 ~-10 ~-10 ~-10 air replace short_grass
# Generate 10 functions that print fibonacci numbers
for function in range(1, 10 + 1):

    /execute as @e[tag=function] run function fibonacci_num_$i:
        /tellraw @a "Fib #$i: ${fibonacci(i)}"

/function say_stuff:
    /$say packscript> $(message) < actual working macro parameter
    /say packscript> $(message) < that is just text
    /say packscript> 2 + 2 = ${2 + 2} < this works because it is compile time
# Create statements are also minimally highlighted (more info about these constructs on packscript's repo)
create tags/blocks chests -> {
    'values': [
        'chest',
        'trapped_chest',
        'ender_chest'
    ]
}